{"ast":null,"code":"var _jsxFileName = \"/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Memory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport EditDropdown from \"./crud_memory/EditDropdown\";\nimport Comments from \"./Comments\";\nimport axios from \"axios\";\nimport \"../Nav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Memory(_ref) {\n  _s();\n\n  let {\n    author,\n    likes,\n    createdAt,\n    image,\n    content,\n    userId,\n    memoryId,\n    getMemories,\n    user,\n    allUsers\n  } = _ref;\n  const memoryInfo = {\n    author,\n    createdAt,\n    likes,\n    image,\n    content,\n    userId,\n    memoryId\n  };\n  const [allComments, setAllComments] = useState('');\n  const [isLiked, setIsLiked] = useState(false);\n  const [authorUsername, setAuthorUsername] = useState(''); // useRef instead of state so it persists between renders until my patch request before component dies\n\n  const likeCounter = useRef(0);\n\n  const getComments = async () => {\n    const url = `https://memories-socialmedia-group.herokuapp.com/comments/${memoryId}`;\n\n    try {\n      await axios.get(url).then(res => setAllComments(res.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const matchUserToMemory = () => {\n    let correctAuthor = allUsers.find(obj => {\n      return obj._id === author;\n    });\n    setAuthorUsername(correctAuthor.email.split(\"@\")[0]);\n  };\n\n  const likeVibe = () => {\n    setIsLiked(!isLiked);\n\n    if (!isLiked) {\n      return likeCounter.current = likeCounter.current + 1;\n    } else return likeCounter.current = likeCounter.current - 1;\n  };\n\n  const updateLikes = async () => {\n    const url = `https://memories-socialmedia-group.herokuapp.com/memory/${memoryId}`;\n    const sendLikes = {\n      \"likes\": likeCounter.current + likes\n    };\n\n    try {\n      await axios.patch(url, sendLikes);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // i need a function to send patch request to update likes\n  // okay, maybe...\n  // how would i update likes? i could increase them, sure, but what if the user unlikes it after liking it?\n  // maybe just when i make the get comments request, i store the likes in state or useRef() and inc or dec within state, then like, componentDidUnmount, or whatever the functional equivalent is, make the patch request with whatever is in state? if componentDidUnmount is doing what i think its doing, running a piece of code right before the node is unmounted, if so, it'll update the db so whenever we come back, the final number will be accurately stored in the db\n\n\n  useEffect(() => {\n    matchUserToMemory();\n    getComments(); //eslint-disable-next-line\n  }, []); // this is acting like componentWillUnmount, sends patch request to the server updating likes in the db right before the component gets destroyed\n\n  useEffect(() => {\n    updateLikes();\n    return () => {\n      updateLikes();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"0px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\",\n        height: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardLogo\",\n          children: \"V\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), authorUsername !== \"\" && authorUsername, userId === author && /*#__PURE__*/_jsxDEV(EditDropdown, {\n          getMemories: getMemories,\n          memoryInfo: memoryInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        style: {\n          backgroundColor: \"#fffafa\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          src: image,\n          style: {\n            width: \"255px\",\n            height: \"250px\",\n            objectFit: \"cover\",\n            borderRadius: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authorImage\",\n          children: authorUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            marginTop: \"10px\",\n            fontFamily: \"Manrope\",\n            fontSize: \"13px\"\n          },\n          children: [content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this), \"Vibed: \", createdAt.split('T')[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 45\n          }, this), !isLiked ? /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: likeVibe,\n            className: \"fa-regular fa-heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: likeVibe,\n            className: \"fa-solid fa-heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 86\n          }, this), \"\\xA0\", likeCounter.current + likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        style: {\n          backgroundColor: \"#FFFFFF\"\n        },\n        children: allComments !== '' && /*#__PURE__*/_jsxDEV(Comments, {\n          userAuth0: user,\n          allUsers: allUsers,\n          getComments: getComments,\n          comments: allComments,\n          author: author,\n          memoryId: memoryId,\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Memory, \"33lUXIRH8cMWYIzt840vd29nCRU=\");\n\n_c = Memory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Memory\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","EditDropdown","Comments","axios","Memory","author","likes","createdAt","image","content","userId","memoryId","getMemories","user","allUsers","memoryInfo","allComments","setAllComments","isLiked","setIsLiked","authorUsername","setAuthorUsername","likeCounter","getComments","url","get","then","res","data","error","console","log","matchUserToMemory","correctAuthor","find","obj","_id","email","split","likeVibe","current","updateLikes","sendLikes","patch","marginTop","width","height","display","justifyContent","backgroundColor","objectFit","borderRadius","fontFamily","fontSize"],"sources":["/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Memory.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport EditDropdown from \"./crud_memory/EditDropdown\";\nimport Comments from \"./Comments\";\nimport axios from \"axios\";\nimport \"../Nav.css\";\n\n\n\nexport default function Memory({ author, likes, createdAt, image, content, userId, memoryId, getMemories, user, allUsers }) {\n  const memoryInfo = { author, createdAt, likes, image, content, userId, memoryId }\n  \n  const [allComments, setAllComments] = useState('')\n  const [isLiked, setIsLiked] = useState(false)\n  const [authorUsername, setAuthorUsername] = useState('')\n  // useRef instead of state so it persists between renders until my patch request before component dies\n  const likeCounter = useRef(0)\n\n  const getComments = async () => {\n    const url = `https://memories-socialmedia-group.herokuapp.com/comments/${memoryId}`;\n    try {\n      await axios.get(url).then((res) => setAllComments(res.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const matchUserToMemory = () => {\n\n    let correctAuthor = allUsers.find(obj =>{return obj._id === author})\n    setAuthorUsername(correctAuthor.email.split(\"@\")[0])\n  }\n\n  const likeVibe = () => {\n\n    setIsLiked(!isLiked)\n    if(!isLiked){return (likeCounter.current = likeCounter.current + 1)}\n    else return (likeCounter.current = likeCounter.current - 1)\n  }\n\n  const updateLikes = async () => {\n    const url = `https://memories-socialmedia-group.herokuapp.com/memory/${memoryId}`\n\n    const sendLikes = {\n      \"likes\": (likeCounter.current + likes)\n    }\n    try {\n      await axios.patch(url, sendLikes)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // i need a function to send patch request to update likes\n  // okay, maybe...\n  // how would i update likes? i could increase them, sure, but what if the user unlikes it after liking it?\n  // maybe just when i make the get comments request, i store the likes in state or useRef() and inc or dec within state, then like, componentDidUnmount, or whatever the functional equivalent is, make the patch request with whatever is in state? if componentDidUnmount is doing what i think its doing, running a piece of code right before the node is unmounted, if so, it'll update the db so whenever we come back, the final number will be accurately stored in the db\n\n  useEffect(() => {\n    matchUserToMemory();\n    getComments();\n    //eslint-disable-next-line\n  },[])\n\n  // this is acting like componentWillUnmount, sends patch request to the server updating likes in the db right before the component gets destroyed\n  useEffect(() => {\n    updateLikes()\n    return () => {\n      updateLikes()\n    }\n  })\n\n\n  return (\n    <div style={{ marginTop: \"0px\" }}>\n      <Card style={{ width: \"18rem\", height: \"auto\" }}>\n        <Card.Header\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          {/*instead of {author}, this is gonna be {user.name} from auth0 */}\n          <div className=\"cardLogo\">V</div>\n\n          {authorUsername !== \"\" && authorUsername}\n\n          {/* i'll use bootstrap dropdown button here that user can click if they wanna edit or delete\n        this is where imma put edit buttons if author matches userId on*/}\n          {userId === author && (\n            <EditDropdown getMemories={getMemories} memoryInfo={memoryInfo} />\n          )}\n        </Card.Header>\n\n        <Card.Body style={{ backgroundColor: \"#fffafa\" }}>\n          <Card.Img\n            src={image}\n            style={{\n              width: \"255px\",\n              height: \"250px\",\n              objectFit: \"cover\",\n              borderRadius: \"0px\",\n            }}\n          />\n          <div className = \"authorImage\">{authorUsername}</div>\n\n          <hr/>\n          <Card.Text\n            style={{\n              marginTop: \"10px\",\n              fontFamily: \"Manrope\",\n              fontSize: \"13px\",\n            }}\n          >\n            {content}<br /><br />\n            Vibed: {createdAt.split('T')[0]}<br />\n            {!isLiked ? <i onClick={likeVibe} className=\"fa-regular fa-heart\"></i> : <i onClick={likeVibe} className=\"fa-solid fa-heart\"></i>}&nbsp;\n            {/*i'll add number of likes here */}\n            {/* {updatedLikes} */}\n            {(likeCounter.current) + (likes)}\n          </Card.Text>\n          {/* </div> */}\n        </Card.Body>\n        <Card.Footer style={{ backgroundColor: \"#FFFFFF\" }}>\n          {/* comments accordion */}\n\n          {allComments !== '' && <Comments userAuth0={user} allUsers={allUsers} getComments={getComments} comments={allComments} author={author} memoryId={memoryId} userId={userId} />}\n\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}