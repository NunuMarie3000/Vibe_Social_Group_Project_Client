{"ast":null,"code":"var _jsxFileName = \"/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Offcanvas, Card } from \"react-bootstrap\"; // ill also pass the auth0 user object here so i have access to username and \"profile pic\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile(_ref) {\n  _s();\n\n  let {\n    user,\n    userId,\n    allMemories,\n    getMemories\n  } = _ref;\n  const [isClicked, setIsClicked] = useState(false);\n  const [userMems, setUserMems] = useState(\"\");\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n\n  const onlyUsersMemories = () => {\n    let these = allMemories.filter(obj => obj.author === userId);\n    setUserMems(these);\n  };\n\n  useEffect(() => {\n    onlyUsersMemories(); //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        style: {\n          backgroundColor: \"#FFFFFF\",\n          color: \"#29E7CD\",\n          border: \"#FFFFFF\",\n          textTransform: \"uppercase\",\n          fontFamily: \"Manrope\",\n          paddingTop: \"10px\"\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: isClicked,\n      onHide: handleClick,\n      style: {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        padding: '10px',\n        marginRight: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          style: {\n            color: \"#FFFFFF\"\n          },\n          children: [\" \", user.nickname, \"'s profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [userMems !== \"\" && userMems.length > 1 && userMems.map(mem => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"10\",\n            height: \"14\",\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              backgroundColor: \"#FFFFFF\"\n            },\n            children: user.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              src: mem.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [mem.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardLogo\",\n                children: \"V\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), \"Vibed: \", mem.createdAt.split(\"T\")[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, mem._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)), userMems !== \"\" && userMems.length === 1 && /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"10\",\n            height: \"14\",\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              backgroundColor: \"#FFFFFF\"\n            },\n            children: user.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              src: userMems[0].image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [userMems[0].content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardLogo\",\n                children: \"V\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), \"Vibed: \", userMems[0].createdAt.split(\"T\")[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), userMems !== '' && userMems.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Lets get to Vibing!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 86\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click the plus button to create a new vibe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 91\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"ZkbWI2y+3ttotgn+dIijUHTtYsU=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Button","Offcanvas","Card","Profile","user","userId","allMemories","getMemories","isClicked","setIsClicked","userMems","setUserMems","handleClick","onlyUsersMemories","these","filter","obj","author","backgroundColor","color","border","textTransform","fontFamily","paddingTop","padding","marginRight","nickname","length","map","mem","width","height","marginBottom","display","justifyContent","image","content","createdAt","split","_id"],"sources":["/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Offcanvas, Card } from \"react-bootstrap\";\n\n// ill also pass the auth0 user object here so i have access to username and \"profile pic\"\nexport default function Profile({ user, userId, allMemories, getMemories }) {\n  const [isClicked, setIsClicked] = useState(false);\n  const [userMems, setUserMems] = useState(\"\")\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n\n  const onlyUsersMemories = () => {\n    let these = allMemories.filter((obj) => obj.author === userId);\n    setUserMems(these);\n  }\n\n  useEffect(() => {\n    onlyUsersMemories()\n    //eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n      <div className=\"profileButton\">\n        <Button\n          onClick={handleClick}\n          style={{\n            backgroundColor: \"#FFFFFF\",\n            color: \"#29E7CD\",\n            border: \"#FFFFFF\",\n            textTransform: \"uppercase\",\n            fontFamily: \"Manrope\",\n            paddingTop: \"10px\",\n          }}\n        >\n          Profile\n        </Button>\n      </div>\n\n\n      <Offcanvas\n        show={isClicked}\n        onHide={handleClick}\n        style={{ backgroundColor: \"transparent\", border: \"none\", padding: '10px', marginRight: \"10px\" }}\n      >\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title style={{ color: \"#FFFFFF\" }}>\n            {\" \"}\n            {user.nickname}'s profile\n          </Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          {userMems !== \"\" && userMems.length > 1 &&\n            userMems.map((mem) => (\n              <Card key={mem._id}\n                style={{ width: \"10\", height: \"14\", marginBottom: \"10px\" }}>\n                <Card.Header\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: \"#FFFFFF\",\n                  }}>\n                  {/*instead of {author}, this is gonna be {user.name} from auth0 */}\n                  {user.nickname}\n                </Card.Header>\n                <Card.Body>\n                  <Card.Img src={mem.image} />\n                  <hr />\n                  <Card.Text>\n                    {mem.content}\n                    <br />\n                    <br />\n                    <div className=\"cardLogo\">V</div>\n                    Vibed: {mem.createdAt.split(\"T\")[0]}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            ))}\n\n          {userMems !== \"\" && userMems.length === 1 &&\n            <Card\n              style={{ width: \"10\", height: \"14\", marginBottom: \"10px\" }}>\n              <Card.Header\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  backgroundColor: \"#FFFFFF\",\n                }}>\n                {/*instead of {author}, this is gonna be {user.name} from auth0 */}\n                {user.nickname}\n              </Card.Header>\n              <Card.Body>\n                <Card.Img src={userMems[0].image} />\n                <hr />\n                <Card.Text>\n                  {userMems[0].content}\n                  <br />\n                  <br />\n                  <div className=\"cardLogo\">V</div>\n                  Vibed: {userMems[0].createdAt.split(\"T\")[0]}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          }\n\n          {userMems !== '' && userMems.length === 0 && <><h1>Lets get to Vibing!</h1><br/><p>Click the plus button to create a new vibe</p></>}\n\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}