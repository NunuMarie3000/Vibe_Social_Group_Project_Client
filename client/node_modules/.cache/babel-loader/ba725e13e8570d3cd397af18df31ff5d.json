{"ast":null,"code":"var _jsxFileName = \"/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport EditComment from './crud_comments/EditComment';\nimport DeleteComment from './crud_comments/DeleteComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    allUsers,\n    body,\n    memoryId,\n    getComments,\n    commentId,\n    commentAuthor,\n    userId\n  } = _ref;\n  let [authorUsername, setAuthorUsername] = useState('');\n\n  const matchUserToComment = () => {\n    let correctAuthor = allUsers.find(user => {\n      return user._id === commentAuthor;\n    });\n    setAuthorUsername(correctAuthor.email.split(\"@\")[0]);\n  }; // we have author of the memory and author of the comment and userId of the person signed in \n  // if the userId(person signed in rn) === author of the comment, \n  // i don't care if it matches the user signed in, i need authorId of the comment === allUsers.user._id\n\n\n  useEffect(() => {\n    matchUserToComment();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        border: 'none',\n        lineHeight: \"80%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          style: {\n            fontFamily: \"Manrope\",\n            fontSize: '12px',\n            textDecoration: \"underline\",\n            fontWeight: \"bold\"\n          },\n          children: authorUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            fontFamily: \"Manrope\",\n            lineHeight: \"110%\",\n            fontSize: \"13px\"\n          },\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: \"12px\",\n            backgroundColor: \"#29E7CD\",\n            borderRadius: \"5px\",\n            color: \"#ffffff\"\n          },\n          children: commentAuthor === userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(EditComment, {\n              memoryId: memoryId,\n              body: body,\n              author: commentAuthor,\n              getComments: getComments,\n              commentId: commentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 44\n            }, this), \" \", /*#__PURE__*/_jsxDEV(DeleteComment, {\n              getComments: getComments,\n              commentId: commentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 164\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Comment, \"RcOqEbAp54XqR5hBvwtlp/cIscU=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Card","EditComment","DeleteComment","Comment","allUsers","body","memoryId","getComments","commentId","commentAuthor","userId","authorUsername","setAuthorUsername","matchUserToComment","correctAuthor","find","user","_id","email","split","border","lineHeight","fontFamily","fontSize","textDecoration","fontWeight","display","justifyContent","backgroundColor","borderRadius","color"],"sources":["/home/nunumarie3000/projects/courses/Code301/Vibe_Social_Group_Project_Client/client/src/components/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card } from 'react-bootstrap'\nimport EditComment from './crud_comments/EditComment'\nimport DeleteComment from './crud_comments/DeleteComment'\n\nexport default function Comment({allUsers, body, memoryId, getComments, commentId, commentAuthor, userId }) {\n  let [authorUsername, setAuthorUsername] = useState('')\n\n  const matchUserToComment = () => {\n    let correctAuthor = allUsers.find(user => {return user._id === commentAuthor})\n    setAuthorUsername(correctAuthor.email.split(\"@\")[0])\n  }\n  // we have author of the memory and author of the comment and userId of the person signed in \n  // if the userId(person signed in rn) === author of the comment, \n  // i don't care if it matches the user signed in, i need authorId of the comment === allUsers.user._id\n\n  useEffect(() => {\n    matchUserToComment()\n  })\n\n  return (\n    <>\n      <Card style = {{border:'none', lineHeight: \"80%\"}}>\n        <Card.Body>\n          <Card.Title style = {{fontFamily: \"Manrope\", fontSize: '12px', textDecoration: \"underline\", fontWeight: \"bold\"}}>{authorUsername}</Card.Title>\n          <Card.Text style = {{fontFamily: \"Manrope\", lineHeight: \"110%\", fontSize: \"13px\"}}>\n            {body}\n          </Card.Text>\n          <Card.Footer style={{display:'flex', justifyContent:'space-between', fontSize: \"12px\", backgroundColor: \"#29E7CD\",borderRadius: \"5px\", color: \"#ffffff\"}}>\n            {/*edit comment button */}{/*delete comment button */}\n            {commentAuthor === userId && <><EditComment  memoryId={memoryId} body={body} author={commentAuthor} getComments={getComments} commentId={commentId} /> <DeleteComment getComments={getComments} commentId={commentId} /></>}\n          </Card.Footer>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,eAAe,SAASC,OAAT,OAA6F;EAAA;;EAAA,IAA5E;IAACC,QAAD;IAAWC,IAAX;IAAiBC,QAAjB;IAA2BC,WAA3B;IAAwCC,SAAxC;IAAmDC,aAAnD;IAAkEC;EAAlE,CAA4E;EAC1G,IAAI,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAAlD;;EAEA,MAAMe,kBAAkB,GAAG,MAAM;IAC/B,IAAIC,aAAa,GAAGV,QAAQ,CAACW,IAAT,CAAcC,IAAI,IAAI;MAAC,OAAOA,IAAI,CAACC,GAAL,KAAaR,aAApB;IAAkC,CAAzD,CAApB;IACAG,iBAAiB,CAACE,aAAa,CAACI,KAAd,CAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAD,CAAjB;EACD,CAHD,CAH0G,CAO1G;EACA;EACA;;;EAEApB,SAAS,CAAC,MAAM;IACdc,kBAAkB;EACnB,CAFQ,CAAT;EAIA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,KAAK,EAAI;QAACO,MAAM,EAAC,MAAR;QAAgBC,UAAU,EAAE;MAA5B,CAAf;MAAA,uBACE,QAAC,IAAD,CAAM,IAAN;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAY,KAAK,EAAI;YAACC,UAAU,EAAE,SAAb;YAAwBC,QAAQ,EAAE,MAAlC;YAA0CC,cAAc,EAAE,WAA1D;YAAuEC,UAAU,EAAE;UAAnF,CAArB;UAAA,UAAkHd;QAAlH;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;UAAW,KAAK,EAAI;YAACW,UAAU,EAAE,SAAb;YAAwBD,UAAU,EAAE,MAApC;YAA4CE,QAAQ,EAAE;UAAtD,CAApB;UAAA,UACGlB;QADH;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE,QAAC,IAAD,CAAM,MAAN;UAAa,KAAK,EAAE;YAACqB,OAAO,EAAC,MAAT;YAAiBC,cAAc,EAAC,eAAhC;YAAiDJ,QAAQ,EAAE,MAA3D;YAAmEK,eAAe,EAAE,SAApF;YAA8FC,YAAY,EAAE,KAA5G;YAAmHC,KAAK,EAAE;UAA1H,CAApB;UAAA,UAEGrB,aAAa,KAAKC,MAAlB,iBAA4B;YAAA,wBAAE,QAAC,WAAD;cAAc,QAAQ,EAAEJ,QAAxB;cAAkC,IAAI,EAAED,IAAxC;cAA8C,MAAM,EAAEI,aAAtD;cAAqE,WAAW,EAAEF,WAAlF;cAA+F,SAAS,EAAEC;YAA1G;cAAA;cAAA;cAAA;YAAA,QAAF,oBAA0H,QAAC,aAAD;cAAe,WAAW,EAAED,WAA5B;cAAyC,SAAS,EAAEC;YAApD;cAAA;cAAA;cAAA;YAAA,QAA1H;UAAA;QAF/B;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAgBD;;GA/BuBL,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}